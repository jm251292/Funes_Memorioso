-- MySQL Script generated by MySQL Workbench
-- 05/26/14 17:54:09
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Usuario` (
  `Usuario` INT NOT NULL AUTO_INCREMENT,
  `Nick` VARCHAR(45) NOT NULL,
  `Contrase√±a` VARCHAR(45) NOT NULL,
  `Rol` VARCHAR(45) NOT NULL DEFAULT 'Usuario',
  `Bloqueado` BINARY NOT NULL DEFAULT 0,
  PRIMARY KEY (`Usuario`),
  UNIQUE INDEX `Nick_UNIQUE` (`Nick` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ente` (
  `idente` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `CedulaJur` VARCHAR(45) NULL,
  PRIMARY KEY (`idente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Calificacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Calificacion` (
  `idCalificacion` INT NOT NULL AUTO_INCREMENT,
  `Calificacion` INT NOT NULL,
  `Nota` VARCHAR(300) NULL,
  `Usuario_Usuario` INT NOT NULL,
  `ente_idente` INT NOT NULL,
  PRIMARY KEY (`idCalificacion`),
  INDEX `fk_Calificacion_Usuario1_idx` (`Usuario_Usuario` ASC),
  INDEX `fk_Calificacion_ente1_idx` (`ente_idente` ASC),
  CONSTRAINT `fk_Calificacion_Usuario1`
    FOREIGN KEY (`Usuario_Usuario`)
    REFERENCES `mydb`.`Usuario` (`Usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Calificacion_ente1`
    FOREIGN KEY (`ente_idente`)
    REFERENCES `mydb`.`ente` (`idente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Persona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Persona` (
  `idPersona` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido1` VARCHAR(45) NOT NULL,
  `apellido2` VARCHAR(45) NULL,
  `Cedula` VARCHAR(45) NOT NULL,
  `Genero` VARCHAR(45) NOT NULL,
  `FechaNacimiento` DATE NOT NULL,
  PRIMARY KEY (`idPersona`),
  UNIQUE INDEX `Cedula_UNIQUE` (`Cedula` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`CalificacionPersona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`CalificacionPersona` (
  `idCalificacionPersona` INT NOT NULL AUTO_INCREMENT,
  `Calificacion` INT NOT NULL,
  `Usuario_Usuario` INT NOT NULL,
  `Persona_idPersona` INT NOT NULL,
  PRIMARY KEY (`idCalificacionPersona`),
  INDEX `fk_CalificacionPersona_Usuario_idx` (`Usuario_Usuario` ASC),
  INDEX `fk_CalificacionPersona_Persona1_idx` (`Persona_idPersona` ASC),
  CONSTRAINT `fk_CalificacionPersona_Usuario`
    FOREIGN KEY (`Usuario_Usuario`)
    REFERENCES `mydb`.`Usuario` (`Usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CalificacionPersona_Persona1`
    FOREIGN KEY (`Persona_idPersona`)
    REFERENCES `mydb`.`Persona` (`idPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Categoria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Categoria` (
  `idCategoria` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idCategoria`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Denuncia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Denuncia` (
  `idDenuncia` INT NOT NULL AUTO_INCREMENT,
  `Denuncia` VARCHAR(300) NOT NULL,
  `Privacidad` BINARY NOT NULL DEFAULT 0,
  `Foto` VARCHAR(45) NULL,
  `Nombre denuncia` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idDenuncia`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`direccion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`direccion` (
  `iddireccion` INT NOT NULL AUTO_INCREMENT,
  `Pais` VARCHAR(45) NOT NULL,
  `Provincia` VARCHAR(45) NOT NULL,
  `Canton` VARCHAR(45) NULL,
  `Distrito` VARCHAR(45) NULL,
  `Barrio` VARCHAR(45) NULL,
  `ente_idente` INT NOT NULL,
  PRIMARY KEY (`iddireccion`),
  INDEX `fk_direccion_ente1_idx` (`ente_idente` ASC),
  CONSTRAINT `fk_direccion_ente1`
    FOREIGN KEY (`ente_idente`)
    REFERENCES `mydb`.`ente` (`idente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Historial`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Historial` (
  `idHistorial` INT NOT NULL AUTO_INCREMENT,
  `Persona_idPersona` INT NOT NULL,
  PRIMARY KEY (`idHistorial`),
  INDEX `fk_Historial_Persona1_idx` (`Persona_idPersona` ASC),
  CONSTRAINT `fk_Historial_Persona1`
    FOREIGN KEY (`Persona_idPersona`)
    REFERENCES `mydb`.`Persona` (`idPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`LugarTrabajo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`LugarTrabajo` (
  `idLugarTrabajo` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `Puesto` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idLugarTrabajo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TipoPersona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`TipoPersona` (
  `idTipoPersona` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTipoPersona`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TipoxPersona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`TipoxPersona` (
  `idTipoxPersona` INT NOT NULL AUTO_INCREMENT,
  `Persona_idPersona` INT NOT NULL,
  `TipoPersona_idTipoPersona` INT NOT NULL,
  PRIMARY KEY (`idTipoxPersona`),
  INDEX `fk_TipoxPersona_Persona1_idx` (`Persona_idPersona` ASC),
  INDEX `fk_TipoxPersona_TipoPersona1_idx` (`TipoPersona_idTipoPersona` ASC),
  CONSTRAINT `fk_TipoxPersona_Persona1`
    FOREIGN KEY (`Persona_idPersona`)
    REFERENCES `mydb`.`Persona` (`idPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TipoxPersona_TipoPersona1`
    FOREIGN KEY (`TipoPersona_idTipoPersona`)
    REFERENCES `mydb`.`TipoPersona` (`idTipoPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Categoriaxente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Categoriaxente` (
  `idCategoriaxente` INT NOT NULL AUTO_INCREMENT,
  `ente_idente` INT NOT NULL,
  `Categoria_idCategoria` INT NOT NULL,
  PRIMARY KEY (`idCategoriaxente`),
  INDEX `fk_Categoriaxente_ente1_idx` (`ente_idente` ASC),
  INDEX `fk_Categoriaxente_Categoria1_idx` (`Categoria_idCategoria` ASC),
  CONSTRAINT `fk_Categoriaxente_ente1`
    FOREIGN KEY (`ente_idente`)
    REFERENCES `mydb`.`ente` (`idente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Categoriaxente_Categoria1`
    FOREIGN KEY (`Categoria_idCategoria`)
    REFERENCES `mydb`.`Categoria` (`idCategoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`DenunciaxHistorial`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`DenunciaxHistorial` (
  `idDenunciaxHistoria` INT NOT NULL AUTO_INCREMENT,
  `Historial_idHistorial` INT NOT NULL,
  `Denuncia_idDenuncia` INT NOT NULL,
  PRIMARY KEY (`idDenunciaxHistoria`),
  INDEX `fk_DenunciaxHistoria_Historial1_idx` (`Historial_idHistorial` ASC),
  INDEX `fk_DenunciaxHistoria_Denuncia1_idx` (`Denuncia_idDenuncia` ASC),
  CONSTRAINT `fk_DenunciaxHistoria_Historial1`
    FOREIGN KEY (`Historial_idHistorial`)
    REFERENCES `mydb`.`Historial` (`idHistorial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DenunciaxHistoria_Denuncia1`
    FOREIGN KEY (`Denuncia_idDenuncia`)
    REFERENCES `mydb`.`Denuncia` (`idDenuncia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`usuarioxDenuncia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`usuarioxDenuncia` (
  `idusuarioxDenuncia` INT NOT NULL AUTO_INCREMENT,
  `Usuario_Usuario` INT NOT NULL,
  `Denuncia_idDenuncia` INT NOT NULL,
  PRIMARY KEY (`idusuarioxDenuncia`),
  INDEX `fk_usuarioxDenuncia_Usuario1_idx` (`Usuario_Usuario` ASC),
  INDEX `fk_usuarioxDenuncia_Denuncia1_idx` (`Denuncia_idDenuncia` ASC),
  CONSTRAINT `fk_usuarioxDenuncia_Usuario1`
    FOREIGN KEY (`Usuario_Usuario`)
    REFERENCES `mydb`.`Usuario` (`Usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuarioxDenuncia_Denuncia1`
    FOREIGN KEY (`Denuncia_idDenuncia`)
    REFERENCES `mydb`.`Denuncia` (`idDenuncia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Comentario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Comentario` (
  `idComentario` INT NOT NULL AUTO_INCREMENT,
  `Comentario` VARCHAR(300) NOT NULL,
  `Usuario_Usuario` INT NOT NULL,
  `Denuncia_idDenuncia` INT NOT NULL,
  PRIMARY KEY (`idComentario`),
  INDEX `fk_Comentario_Usuario1_idx` (`Usuario_Usuario` ASC),
  INDEX `fk_Comentario_Denuncia1_idx` (`Denuncia_idDenuncia` ASC),
  CONSTRAINT `fk_Comentario_Usuario1`
    FOREIGN KEY (`Usuario_Usuario`)
    REFERENCES `mydb`.`Usuario` (`Usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Comentario_Denuncia1`
    FOREIGN KEY (`Denuncia_idDenuncia`)
    REFERENCES `mydb`.`Denuncia` (`idDenuncia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Archivos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Archivos` (
  `idArchivos` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `Fuente` VARCHAR(45) NOT NULL,
  `Comentario_idComentario` INT NOT NULL,
  PRIMARY KEY (`idArchivos`),
  INDEX `fk_Archivos_Comentario1_idx` (`Comentario_idComentario` ASC),
  CONSTRAINT `fk_Archivos_Comentario1`
    FOREIGN KEY (`Comentario_idComentario`)
    REFERENCES `mydb`.`Comentario` (`idComentario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`DenunciaxPersona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`DenunciaxPersona` (
  `idDenunciaxPersona` INT NOT NULL AUTO_INCREMENT,
  `Denuncia_idDenuncia` INT NOT NULL,
  `Persona_idPersona` INT NOT NULL,
  PRIMARY KEY (`idDenunciaxPersona`),
  INDEX `fk_DenunciaxPersona_Denuncia1_idx` (`Denuncia_idDenuncia` ASC),
  INDEX `fk_DenunciaxPersona_Persona1_idx` (`Persona_idPersona` ASC),
  CONSTRAINT `fk_DenunciaxPersona_Denuncia1`
    FOREIGN KEY (`Denuncia_idDenuncia`)
    REFERENCES `mydb`.`Denuncia` (`idDenuncia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DenunciaxPersona_Persona1`
    FOREIGN KEY (`Persona_idPersona`)
    REFERENCES `mydb`.`Persona` (`idPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`UsuarioxPersona`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`UsuarioxPersona` (
  `idUsuarioxPersona` INT NOT NULL AUTO_INCREMENT,
  `Usuario_Usuario` INT NOT NULL,
  `Persona_idPersona` INT NOT NULL,
  PRIMARY KEY (`idUsuarioxPersona`),
  INDEX `fk_UsuarioxPersona_Usuario1_idx` (`Usuario_Usuario` ASC),
  INDEX `fk_UsuarioxPersona_Persona1_idx` (`Persona_idPersona` ASC),
  CONSTRAINT `fk_UsuarioxPersona_Usuario1`
    FOREIGN KEY (`Usuario_Usuario`)
    REFERENCES `mydb`.`Usuario` (`Usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_UsuarioxPersona_Persona1`
    FOREIGN KEY (`Persona_idPersona`)
    REFERENCES `mydb`.`Persona` (`idPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`PersonaxTrabajo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`PersonaxTrabajo` (
  `idPersonaxTrabajo` INT NOT NULL,
  `Persona_idPersona1` INT NOT NULL,
  `LugarTrabajo_idLugarTrabajo` INT NOT NULL,
  PRIMARY KEY (`idPersonaxTrabajo`),
  INDEX `fk_PersonaxTrabajo_Persona1_idx` (`Persona_idPersona1` ASC),
  INDEX `fk_PersonaxTrabajo_LugarTrabajo1_idx` (`LugarTrabajo_idLugarTrabajo` ASC),
  CONSTRAINT `fk_PersonaxTrabajo_Persona1`
    FOREIGN KEY (`Persona_idPersona1`)
    REFERENCES `mydb`.`Persona` (`idPersona`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PersonaxTrabajo_LugarTrabajo1`
    FOREIGN KEY (`LugarTrabajo_idLugarTrabajo`)
    REFERENCES `mydb`.`LugarTrabajo` (`idLugarTrabajo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `mydb` ;

-- -----------------------------------------------------
-- procedure proyeccion
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `proyeccion` ()
BEGIN
	select * from usuarios;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure ins_persona
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `ins_persona` (IN nom VARCHAR(45), IN ape1 VARCHAR(45), IN ape2 VARCHAR(45), 
IN Ced VARCHAR(45), IN Gen VARCHAR(45), IN fecha DATE, in nombretipopersona VARCHAR(50))

BEGIN

	declare idtipopers varchar(45);
	declare idpers varchar(45);	
	declare existe INT;

	insert into persona( nombre, apellido1, apellido2, Cedula, genero, FechaNacimiento) 
	values (nom, ape1, ape2, ced, gen, fecha); 
	select count(*) into existe from tipoPersona where Nombre= nombretipopersona;

	if (existe=0)
	THEN
		insert INTO tipoPersona values (null, nombretipopersona);
	else 
		select idpersona into idpers from Persona where Cedula= ced limit 1;
		select idtipopersona into idtipopers from tipoPersona where Nombre= nombretipopersona limit 1;
		insert into tipoxpersona values (null, idpers, idtipopers);
	end if;
END;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure ins_categoria
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `ins_categoria` (in nom varchar(45))
BEGIN
insert into categoria(idCategoria, Nombre) values (NULL, nom); END;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_personaNom
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `get_personaNom` (IN nom VARCHAR(45))
BEGIN
select nombre, apellido1, apellido2 from persona 
	WHERE nombre = nom order by Nombre; END;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_personaApe1
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `get_personaApe1` (IN apellido VARCHAR(45))
BEGIN
	select nombre, apellido1, apellido2 from persona 
	WHERE apellido1 = apellido order by apellido1, apellido2; END;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_personaApe2
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `get_personaApe2` (IN apellido VARCHAR(45))
BEGIN
select nombre, apellido1, apellido2 from persona 
	WHERE apellido2 = apellido order by apellido2, apellido1; END;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_personaCed
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `get_personaCed` (IN ced VARCHAR(45))
BEGIN
select nombre, apellido1, apellido2 from persona 
	WHERE Cedula = ced order by apellido1; END;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_enteNom
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `get_enteNom` (IN nom VARCHAR(45))
BEGIN
select Nombre, Cedula from ente 
	WHERE Nombre = nom order by nombre; END;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_enteCed
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `get_enteCed` (IN ced VARCHAR(45))
BEGIN
select nombre, cedula from ente 
	WHERE Cedula = ced order by nombre; END;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_categorias
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `get_categorias` ()
BEGIN
select Nombre from tipopersona order by nombre; END;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure registrarUsuarios
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `registrarUsuarios` (in nic varchar(100), in pass varchar(100), in roll varchar(100), in ID varchar(50))
BEGIN
	insert into Usuario (nick, contrase√±a, rol, bloqueado) values (nic, md5(pass), roll, false);	
	insert into UsuarioxPersona (Usuario_Usuario,Persona_idPersona) values ((select max(Usuario) from Usuario limit 1), (select idPersona from Persona where cedula= ID limit 1));
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure retornarPersonasSinCuenta
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `retornarPersonasSinCuenta` ()
BEGIN
	select * from persona where persona.idPersona not in ( select Persona_idPersona from UsuarioxPersona) order by Apellido1;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure login
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `login` (in nic varchar(100), in pass varchar(100), in roll varchar(100))
BEGIN
	select count(*) from usuario where nick = nic and contrase√±a = md5(pass) and rol = roll and bloqueado = false;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure retornarEntidad
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `retornarEntidad` ()
BEGIN
select * from ente;
END;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure retornarTipoPersona
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `retornarTipoPersona` ()
BEGIN
	select * from tipoPersona;
END;$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure registrarPersona
-- -----------------------------------------------------

DELIMITER $$
USE `mydb`$$
CREATE PROCEDURE `registrarPersona` (in nom varchar(50), in ape1 varchar(50), in ape2 varchar(50), in ced varchar(50), 
									in gen VARCHAR(50), in fecha DATE) -- Formato para DATE = yyyy-mm-dd
BEGIN
	insert into Persona (nombre, apellido1, apellido2, Cedula, Genero, FechaNacimiento) values (nom, ape1, ape2, ced, gen, fecha);	
	insert into UsuarioxPersona (Usuario_Usuario,Persona_idPersona) values ((select max(Usuario) from Usuario limit 1), (select idPersona from Persona where cedula= ID limit 1));
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
